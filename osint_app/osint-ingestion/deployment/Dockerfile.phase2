# Phase 2 Enhanced Dockerfile
# Includes all intelligence features: bias detection, entity linking, multilingual support

FROM node:18-slim AS base

# Install Python and system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    curl \
    build-essential \
    postgresql-client \
    # Required for some Python packages
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    # Clean up
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies for Phase 2
RUN pip install --upgrade pip && \
    pip install \
    # Core ML dependencies
    numpy==1.24.3 \
    scipy==1.11.4 \
    scikit-learn==1.3.2 \
    # Text embeddings
    sentence-transformers==2.2.2 \
    transformers==4.36.2 \
    torch==2.1.2 --index-url https://download.pytorch.org/whl/cpu \
    # Clustering
    hdbscan==0.8.33 \
    umap-learn==0.5.5 \
    # Translation
    argostranslate==1.9.1 \
    # Bias detection support
    pandas==2.1.4 \
    # Entity linking support
    spacy==3.7.2 \
    requests==2.31.0 \
    # Multilingual models
    langdetect==1.0.9 \
    # Database
    psycopg2-binary==2.9.9

# Download spaCy model for entity recognition
RUN python3 -m spacy download en_core_web_sm

# Download Argos Translate packages (English + major languages)
RUN python3 -c "import argostranslate.package; \
    from argostranslate import translate; \
    argostranslate.package.update_package_index(); \
    available_packages = argostranslate.package.get_available_packages(); \
    languages = [('ar', 'en'), ('es', 'en'), ('fr', 'en'), ('ru', 'en'), ('zh', 'en'), ('de', 'en')]; \
    for src, tgt in languages: \
        pkg = next((p for p in available_packages if p.from_code == src and p.to_code == tgt), None); \
        if pkg: argostranslate.package.install_from_path(pkg.download())"

# Pre-download sentence transformer models
RUN python3 -c "from sentence_transformers import SentenceTransformer; \
    SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2'); \
    SentenceTransformer('sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2')"

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install Node dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p \
    /app/data/embeddings \
    /app/data/bias \
    /app/data/entities \
    /app/logs \
    /app/tmp

# Set environment variables
ENV NODE_ENV=production
ENV PYTHONUNBUFFERED=1
ENV TRANSFORMERS_CACHE=/app/data/models
ENV SENTENCE_TRANSFORMERS_HOME=/app/data/models

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node healthcheck.js || exit 1

# Run as non-root user
RUN groupadd -r osint && useradd -r -g osint osint
RUN chown -R osint:osint /app
USER osint

# Start command
CMD ["node", "orchestrator.js"]